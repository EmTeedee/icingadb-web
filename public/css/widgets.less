.card {
  .rounded-corners(.5em);
  border: 1px solid @gray-light;
}

.card-body,
.card-header {
  display: flex;
  align-items: center;
  justify-content: space-between;

  padding: .5em;
}

.card-header {
  border-bottom: 1px solid @gray-light;
}

.check-statistics {
  .vertical-key-value {
    .key {
      color: @gray;
    }

    .value {
      font-size: 1em;
      line-height: 1;
    }
  }

  .check-attempt {
    display: inline-flex;
  }
}

.check-timeline {
  padding: .5em .5em 3.5em;
  width: 80%;

  &::after {
    .rounded-corners(.5em);
    content: '';
    display: block;
    height: 0.25em;
    width: 100%;
  }

  &:not(.overdue)::after {
    background-color: gray;
  }

  &.overdue::after {
    background-color: @color-critical;
  }

  li {
    position: relative;

    &:not(.above) {
      transform: translateY(100%);
      padding-top: 1.5em;
    }

    &::after {
      background-color: gray;
      content: '';
      display: block;
      height: 1em;
      width: 1px;

      position: absolute;
      left: 50%;
    }

    &:not(.above)::after {
      margin-top: .25em;
      top: 0;
    }

    &.above::after {
      margin-top: 0.125em;
    }
  }

  ol {
    list-style-type: none;
    margin: 0;
    padding: 0;

    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}

.custom-var-table {
  .level-1 th {
    padding-left: .5em;
  }

  .level-2 th {
    padding-left: 1em;
  }

  .level-3 th {
    padding-left: 1.5em;
  }

  .level-4 th {
    padding-left: 2em;
  }

  .level-5 th {
    padding-left: 2.5em;
  }

  .level-6 th {
    padding-left: 3em;
  }
}

.downtime-timeline {
  .rounded-corners(.5em);
  background-color: @gray-lighter;
  height: 1em;
  margin: 1em 0;
  position: relative;

  .progress-bar,
  .progress-in-effect {
    border-bottom-left-radius: .5em;
    border-top-left-radius: .5em;
    height: 100%;
    position: absolute;
  }

  .progress-bar {
    background-color: @color-ok;
  }
}

.horizontal-key-value {
  display: flex;
  padding: .25em 0;

  .key {
    width: 12em;
    margin-right: 1em;
    flex: 0 0 auto;
    color: @gray;
  }

  .value {
    flex: 1 1 auto;
  }
}

.tag-list {
  line-height: 1.5;
  list-style-type: none;
  margin: -.25em 0 0 0;
  padding: 0;

  > li {
    display: inline-block;

    &:not(:last-child) {
      margin-right: .417em;
      margin-bottom: .25em;
    }

    i {
      opacity: 0.8;
    }
  }

  > li > a {
    .rounded-corners();
    background-color: @gray-lighter;
    display: block;
    padding: .25em .5em;

    &:hover {
      background-color: @gray-light;
      text-decoration: none;
    }
  }
}

.event-box {
  .rounded-corners(.5em);
  background-color: fade(@gray, 80);
  border: 1px solid @gray-light;
  color: white;
  margin-bottom: .25em;
  padding: .5em;

  header {
    display: flex;

    time {
      margin-left: auto;
    }
  }

  .title {
    font-size: 1em;
    font-weight: normal;
    margin: 0;
    padding: 0;

    em {
      font-style: normal;
      text-transform: uppercase;
    }

    a {
      font-weight: bold;
    }
  }

  .caption {
    margin: 0;
    opacity: .8;

    &.output {
      .monospace();
    }
  }

  &.state-critical {
    background-color: fade(@color-critical, 80);
    border-color: @color-critical;
  }

  &.state-down {
    background-color: fade(@color-down, 80);
    border-color: @color-down;
  }

  &.state-ok {
    background-color: fade(@color-ok, 80);
    border-color: @color-ok;
  }

  &.state-pending {
    background-color: fade(@color-pending, 80);
    border-color: @color-pending;
  }

  &.state-unknown {
    background-color: fade(@color-unknown, 80);
    border-color: @color-unknown;
  }

  &.state-up {
    background-color: fade(@color-up, 80);
    border-color: @color-up;
  }

  &.state-warning {
    background-color: fade(@color-warning, 80);
    border-color: @color-warning;
  }

  &.collapsible.collapsed {
    &.state-critical:before,
    &.state-critical:after {
      background: linear-gradient(fade(@color-critical, 0), fade(@color-critical, 80));
    }

    &.state-down:before,
    &.state-down:after {
      background: linear-gradient(fade(@color-down, 0), fade(@color-down, 80));
    }

    &.state-ok:before,
    &.state-ok:after {
      background: linear-gradient(fade(@color-ok, 0), fade(@color-ok, 80));
    }

    &.state-pending:before,
    &.state-pending:after {
      background: linear-gradient(fade(@color-pending, 0), fade(@color-pending, 80));
    }

    &.state-unknown:before,
    &.state-unknown:after {
      background: linear-gradient(fade(@color-unknown, 0), fade(@color-unknown, 80));
    }

    &.state-up:before,
    &.state-up:after {
      background: linear-gradient(fade(@color-up, 0), fade(@color-up, 80));
    }

    &.state-warning:before,
    &.state-warning:after {
      background: linear-gradient(fade(@color-warning, 0), fade(@color-warning, 80));
    }
  }
}

.quick-actions {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  list-style-type: none;
  margin: 0 -.25em;
  max-width: 60em;
  padding: 0;

  a {
    text-decoration: none;
  }

  li {
    .rounded-corners();
    padding: .25em;
    vertical-align: middle;
    white-space: nowrap;

    &:hover {
      background: @gray-lighter;
    }
  }

  .spinner {
    padding: 0;
  }
}

form.object-features {
  span.description {
    text-align: left;
  }

  .control-label-group {
    text-align: left;
    margin-right: 0;
    width: @name-value-table-name-width;
    color: @gray;

    label {
      font-size: inherit;
    }
  }

  .control-group {
    margin-top: 0;
    margin-bottom: 0;

    &.indeterminate {
      justify-content: flex-start;

      .control-label-group {
        flex: 0 1 auto;
      }

      select {
        width: auto;
        flex: 0 1 auto;

        & + span.hint {
          flex: 0 1 auto;
        }
      }
    }
  }

  .toggle-switch {
    margin-left: @table-column-padding;
  }

  select {
    margin-right: .5em;
    margin-left: @table-column-padding;

    & + span.hint {
      margin: .35em;
      color: @gray-light;
      font-style: italic;
    }
  }
}

.state-change {
  .state-ball {
    box-shadow: 0 0 0 1px white;
  }

  .state-ball ~ .state-ball {
    margin-left: -.875em;
  }

  .state-ball.state-ok,
  .state-ball.state-up {
    background-color: white;
  }
}

.key-value-list {
  list-style-type: none;
  margin: 0;
  padding: 0;

  li {
    display: flex;
  }

  li > span {
    padding: .25em;

    &.label {
      display: block;
      padding-left: 0;
      width: 12em;
    }
  }
}

.empty-state {
  color: @gray-semilight;
}

/* migrate popup */

#migrate-popup {
  @transitionLength: 350ms;

  display: flex;
  min-width: 16em;
  z-index: 1000;
  position: fixed;
  top: 0;
  right: 4em;
  pointer-events: none;

  .transform(translateY(-100%));
  .transition(transform @transitionLength ease-in);

  &.active {
    .transform(translateY(0%));
    .transition(transform @transitionLength ease-out);
  }

  .suggestion-area {
    .transform(translateY(0%));
    .transition(transform 0s linear @transitionLength);
  }

  &.active .suggestion-area {
    .transition(transform @transitionLength ease-out);
  }

  &.minimized .suggestion-area {
    .transform(translateY(-100%));
    .transition(transform @transitionLength ease-in);
  }

  &.hidden .suggestion-area {
    .transition(none);
  }

  .minimizer {
    width: 1.25em;
    height: 1.5em;
    margin-left: -1px;
    z-index: 1;
    pointer-events: auto;

    border-bottom-right-radius: 4px;
    background-color: white;

    .transition(none);

    i:before {
      width: 1em;
      margin: .1em 0 0 0;
      content: '\f102';
      font-size: 1.25em;
      cursor: pointer;
      color: @gray-light;
    }

    i:hover:before {
      color: @menu-highlight-color;
    }
  }

  &.minimized .minimizer {
    border-bottom-left-radius: 4px;
    .transition(border-bottom-left-radius 0s linear @transitionLength);
  }

  &.hidden .minimizer i:before {
    content: '\f103';
  }

  &:not(.active) .suggestion-area, &.hidden .suggestion-area {
    box-shadow: none;
  }

  .suggestion-area {
    padding: .75em .75em .25em;
    flex-grow: 1;
    pointer-events: auto;

    background: white;
    border-radius: 0 0 4px 4px;
    box-shadow: 0 0 1em 0 rgba(0, 0, 0, 0.3);

    button {
      .link-button();
    }

    p {
      margin-bottom: .5em;
      font-size: 90%;
      color: @text-color-light;
    }

    & > button.close {
      float: right;
      margin-top: 1em;
      font-size: 75%;

      &:hover {
        text-decoration: underline;
      }
    }

    ul {
      padding: 0;
      margin: .5em 0 0;
      list-style-type: none;
    }

    li {
      margin: .5em 0;
      display: flex;

      &:last-of-type {
        margin-bottom: 0;
      }
    }

    li {
      :not(:last-child) {
        margin-right: .5em;
      }

      button[value="1"] {
        flex-grow: 1;

        color: @text-color;
        font-weight: bold;
        font-size: 90%;

        &:hover {
          text-decoration: underline;
        }
      }

      button[value="0"] {
        i:before {
          margin: 0;
          content: '\e804';
          font-size: 80%;
        }
      }
    }
  }
}

.actions a {
  border-bottom: 1px solid @gray-light;
  display: inline-block;
  margin-bottom: .25em;

  &:hover {
    border-color: fade(@icinga-blue, 60);
    color: @icinga-blue;
    text-decoration: none;
  }
}
